# 我想大部分人都知道，通常一个程序员会具有的美德。当然了，有三种：懒惰、暴躁、傲慢。
# 一个人写的烂软件将会给另一个人带来一份全职工作。
# 一鼓作气，考研是一种忍耐！！！


print('------------格式化字符串第一种方式，%作占位符---------------')
name='张三'
age=20
print('我叫%s,今年%d岁' % (name,age)) #(name,age)是元组


s='helloworld'
print('------------格式化字符串第二种方式，{}作占位符---------------')
print('我叫{0},今年{1}岁'.format(name,age)) #format(name,age)是方法 {}里是索引
print('{0:*<20}'.format(s))  #宽度20左对齐，*补齐
print('{0:*>20}'.format(s))  #宽度20右对齐，*补齐
print('{0:*^20}'.format(s))  #宽度20居中对齐，*补齐
print(s.center(20,'*'))  #宽度20居中对齐，*补齐

#千位分隔符
print('{0:,}'.format(987654321))
print('{0:,}'.format(987654321.4531))

#浮点数小数部分的精度
print('{0:.2f}'.format(3.1415926))
#显示最大表示长度
print('{0:.5}'.format(3.1415926))

#整数表示
a=425
print('{0:b},{0:c},{0:d},{0:o},{0:x},{0:X}'.format(a))

#浮点数类型
b=3.1415926
print('{0:.2f},{0:.2E},{0:.2e},{0:.2%}'.format(b))

print('------------格式化字符串第三种方式，f-string方法---------------')
print(f'我叫{name}，今年{age}岁')


print('-------------使用%表示宽度和精度---------------')
print('%d' % 99)        #宽度为0        print('%0d' % 99)也可
print('%10d' % 99)      #10表示的是总宽度
print('hellohello')
print('%f' % 3.1415926)     #全部保留
print('%0.0f' % 3.1415926)  #宽度为0，小数点后0位
print('%.3f' % 3.1415926)   #保留3位小数    print('%0.3f' % 3.1415926)也可

#同时表示宽度和精度
print('%10.3f' % 3.1415926)   #总宽度为10，小数点后三位


print('----------使用{}表示宽度和精度------------')
print('{0}'.format(3.1415926))
print('{}'.format(3.1415926))

print('{0:.3}'.format(3.1415926))      #表示保留三位有效数字
print('{0:.3f}'.format(3.1415926))     #表示保留三位小数
#同时表示宽度和精度
print('{0:10.3f}'.format(3.1415926))






